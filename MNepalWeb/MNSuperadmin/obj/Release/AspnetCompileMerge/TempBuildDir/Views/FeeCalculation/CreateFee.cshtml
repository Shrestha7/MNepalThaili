
@{
    ViewBag.Title = "Create Fee";
}

<!-- =============================================== -->
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Fee Calculation
        @*<small>Registration</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-user"></i>Fee Calculation</a></li>
        <li class="active">Create</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Main row -->
    <div class="row">

        @using (Html.BeginForm("CreateFee", "FeeCalculation", FormMethod.Post, new { @id = "CreateFeeForm", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            if (this.ViewData["registration_message"] != null)
            {
                if (this.ViewData["message_class"].ToString() == "success_info")
                {
                    <div class="alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <h4>Success</h4> @this.ViewData["registration_message"]
                    </div>
                }
                else
                {
                    <div class="alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <h4>Error</h4> @this.ViewData["registration_message"]
                    </div>
                }
            }

            <!-- Start -->
            <div class="col-xs-10">

                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Create</h3>
                    </div>
                    <!-- /.box-header -->

                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">Fee ID:<b style="color:red;">*</b></label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="FeeID" name="txtFeeID" maxlength="4" placeholder="Fee ID (eg:F001)" />
                                        <label id="check"> Please use valid Fee ID</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">Fee Type:<b style="color:red;">*</b></label>
                                    <div class="col-sm-6">
                                        @*<input type="text" class="form-control" id="FeeType" name="txtFeeType" placeholder="Fee Type" maxlength="40" onkeypress="return isAlphabateDot(event)" required />*@
                                        <select class="form-control" id="FeeType" name="txtFeeType">
                                            <option value="Flat">Flat</option>
                                            <option value="Tierd">Tierd</option>
                                            <option value="AmountTierd">AmountTierd</option>
                                            <option value="VelocityTierd">VelocityTierd</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Fee Detail<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="FeeDetail" name="txtFeeDetail" maxlength="40" required placeholder="Fee Detail" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Flat Fee<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="FlatFee" name="txtFlatFee" required placeholder="Flat Fee" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Fee Branch<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="FeeBranch" name="txtFeeBranch" required placeholder="Fee Branch" maxlength="3" value="001" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Fee Account<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="FeeAccount" name="txtFeeAccount" required placeholder="Fee Account" maxlength="13" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Tiered Start<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="TieredStart" name="txtTieredStart" required placeholder="Tiered Start" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Tiered End<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="TieredEnd" name="txtTieredEnd" required placeholder="Tiered End" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Min Amount<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="MinAmt" name="txtMinAmt" required placeholder="Min Amount" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Max Amount<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="MaxAmt" name="txtMaxAmt" required placeholder= "Max Amount" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        Percentage<b style="color:red;">*</b>
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="Percentage" name="txtPercentage" required placeholder="Percentage" />
                                        @*<label id="check"> Please use Email Address </label>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->

                    <div class="box-footer">
                        <input type="submit" class="btn btn-primary" name="btnCommand" id="btnSubmit" value="Submit" />
                    </div>
                    <!-- /.box-footer -->
                </div>
                <!-- /.box -->
                
                <!-- /.box-body -->
            </div>
            <!-- col-xs-10-->

            <!-- End-->
        }

    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<!-- =============================================== -->

@section scripts {

    <!-- Load jQuery and the validate plugin -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.js"></script>

    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.4.5/js/bootstrapvalidator.min.js'></script>

    <!-- jQuery Form Validation code -->

    <script type="text/javascript">
        
        function isAlphabateDot(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 32 && charCode < 46) || (charCode > 46 && charCode < 48) || (charCode > 57 && charCode < 65) || (charCode > 90 && charCode < 97) || (charCode > 122 && charCode < 127) || (charCode > 47 && charCode < 58)) {
                
                return false;
            }
            return true;
        }
        
        function isNumberKey(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        
        
        $(document).ready(function () {

        /**Validation Check */
        $('#CreateFeeForm').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                txtFeeID: {
                    validators: {
                        notEmpty: {
                            message: 'The Fee ID is required and cannot be empty'
                        }
                        //regexp: {
                        //    regexp: /^[0-9a-zA-Z]+$/,
                        //    message: 'Your Full name cannot have symbols'
                        //}
                    }

                },
                txtFeeType: {
                    validators: {
                        notEmpty: {
                            message: 'The Fee Type is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[a-zA-Z]+$/,
                            message: 'The Fee Type cannot have numbers or symbols'
                        }
                    }
                },
                txtFeeDetail: {
                    validators: {
                        notEmpty: {
                            message: 'The Fee Detail is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[a-zA-Z ]+$/,
                            message: 'The Fee Type cannot have numbers or symbols'
                        }
                    }
                },
                txtFlatFee: {
                    validators: {
                        notEmpty: {
                            message: 'The Flat Fee is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9.]+$/,
                            message: 'The Flat Fee cannot have numbers or symbols'
                        }
                    }
                },
                txtFeeBranch: {
                    validators: {
                        notEmpty: {
                            message: 'The Fee Branch is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Fee Branch cannot have numbers or symbols'
                        }
                    }
                },
                txtFeeAccount: {
                    validators: {
                        notEmpty: {
                            message: 'The Fee Account is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Fee Account cannot have numbers or symbols'
                        }
                    }
                },
                txtTieredStart: {
                    validators: {
                        notEmpty: {
                            message: 'The Tiered Start is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Tiered Start cannot have numbers or symbols'
                        }
                    }
                },
                txtTieredEnd: {
                    validators: {
                        notEmpty: {
                            message: 'The Tiered End is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Tiered End cannot have numbers or symbols'
                        }
                    }
                },
                txtMinAmt: {
                    validators: {
                        notEmpty: {
                            message: 'The Min Amount is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Min Amount cannot have numbers or symbols'
                        }
                    }
                },
                txtMaxAmt: {
                    validators: {
                        notEmpty: {
                            message: 'The Max Amount is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Max Amount cannot have numbers or symbols'
                        }
                    }
                },
                txtPercentage: {
                    validators: {
                        notEmpty: {
                            message: 'The Percentage is required and cannot be empty'
                        },
                        regexp: {
                            regexp: /^[0-9]+$/,
                            message: 'The Percentage cannot have numbers or symbols'
                        }
                    }
                },
                txtEmail: {
                    validators: {
                        //emailAddress: {
                        //    message: 'The email address is not valid.'
                        //},
                        regexp: {
                            regexp: /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                            message: 'Email Address is not valid'
                        },
                        notEmpty: {
                            message: 'The UserName is required and cannot be empty'
                        }
                    }
                },
                txtUserType: {
                    validators: {
                        notEmpty: {
                            message: 'The UserType is required and cannot be empty'
                        }
                    }
                }
            }
        });

        });

         $("#FeeID").change(function (event) {
            debugger;
            event.preventDefault();
                
            var id = $("#FeeID").val();

            if (id == "") {
                $("#check").html("");
            }

            if (id != "") {

                //if (id.substr(0, 2) != '98') {

                //    return;
                //}
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: '@Url.Action("GetCheckingFeeID", "FeeCalculation")',
                    data: { "FeeID": id },
                    success: function (data, textStatus) {
                        var markup = data;
                        if (data == "Success") {
                            $("#check").html("");
                            $("#check").css("color", "green");
                            $("#check").html("Valid").show();
                            $('#btnSubmit').show();
                        }
                        else {
                            debugger;
                            $('#btnSubmit').hide();
                            $("#check").html("");
                            $("#check").css("color", "red");
                            $("#check").html(markup).show();
                            $('#CreateFeeForm').bootstrapValidator('enableFieldValidators', 'txtFeeID', false);
                        }
                    },
                    error: function () {
                        alert("Data Not Found");
                    }
                });
            }
            else
            {
                $('#CreateFeeForm').bootstrapValidator('enableFieldValidators', 'txtFeeID', true);
            }
        });
    </script>
}